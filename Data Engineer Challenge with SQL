# Test SQL - MySQL Dialect

# Produk DQLab Mart ðŸš€
SELECT no_urut, kode_produk, nama_produk, harga 
FROM ms_produk 
WHERE 
harga BETWEEN 50000 AND 150000;


# Thumb drive di DQLab Mart ðŸš€
SELECT no_urut, kode_produk, nama_produk, harga 
FROM ms_produk 
WHERE 
nama_produk LIKE "%Flashdisk%";


# Pelanggan Bergelar ðŸš€
SELECT 
	no_urut, kode_pelanggan,
	nama_pelanggan, alamat 
FROM ms_pelanggan 
WHERE 
nama_pelanggan LIKE '%S.H%' OR 
nama_pelanggan LIKE'%Ir.%' OR 
nama_pelanggan LIKE '%Drs.%';


# Mengurutkan Nama Pelanggan ðŸš€
SELECT nama_pelanggan 
FROM ms_pelanggan 
ORDER BY nama_pelanggan asc;


# Mengurutkan Nama Pelanggan Tanpa Gelar ðŸš€
SELECT 
 nama_pelanggan
FROM
 ms_pelanggan
ORDER BY 
 CASE WHEN LEFT (nama_pelanggan, 3) = 'Ir.' THEN
substring(nama_pelanggan,5,100)
ELSE nama_pelanggan END asc;


# Nama Pelanggan yang Paling Panjang ðŸš€
SELECT 
 *
FROM (
   SELECT nama_pelanggan 
   FROM ms_pelanggan
ORDER BY length(nama_pelanggan)
desc,nama_pelanggan) as a LIMIT 1;


# Nama Pelanggan yang Paling Panjang dengan Gelar ðŸš€
SELECT nama_pelanggan 
FROM ms_pelanggan
WHERE LENGTH(nama_pelanggan) IN
(SELECT MAX(LENGTH(nama_pelanggan)) 
 FROM ms_pelanggan)
OR LENGTH(nama_pelanggan) IN (SELECT MIN(LENGTH(nama_pelanggan)) FROM ms_pelanggan)
ORDER BY LENGTH(nama_pelanggan) DESC;


# Kuantitas Produk yang Banyak Terjual ðŸš€
SELECT 
	ms_produk.kode_produk,
    ms_produk.nama_produk,
	sum(tr_penjualan_detail.qty) as
total_qty
FROM
    ms_produk
JOIN
	tr_penjualan_detail
ON ms_produk.kode_produk = 
tr_penjualan_detail.kode_produk
GROUP BY 
	ms_produk.kode_produk,
	ms_produk.nama_produk
HAVING
	total_qty >= 7


# Pelanggan Paling Tinggi Nilai Belanjanya ðŸš€
SELECT 
tr_penjualan.kode_pelanggan AS kode_pelanggan,
ms_pelanggan.nama_pelanggan AS nama_pelanggan,
SUM(tr_penjualan_detail.qty * tr_penjualan_detail.harga_satuan) AS total_harga
FROM tr_penjualan_detail
INNER JOIN tr_penjualan
ON tr_penjualan_detail.kode_transaksi = tr_penjualan.kode_transaksi
INNER JOIN ms_pelanggan
ON tr_penjualan.kode_pelanggan = ms_pelanggan.kode_pelanggan
GROUP BY kode_pelanggan, nama_pelanggan
ORDER BY total_harga DESC LIMIT 1;


# Pelanggan yang Belum Pernah Berbelanja ðŸš€
SELECT
ms_pelanggan.kode_pelanggan,
ms_pelanggan.nama_pelanggan,
ms_pelanggan.alamat
FROM ms_pelanggan
WHERE ms_pelanggan.kode_pelanggan NOT IN
(SELECT tr_penjualan.kode_pelanggan FROM tr_penjualan)
GROUP BY kode_pelanggan, nama_pelanggan, alamat;


# Transaksi Belanja dengan Daftar Belanja lebih dari 1 ðŸš€
SELECT 
tr_penjualan.kode_transaksi, tr_penjualan.kode_pelanggan, ms_pelanggan.nama_pelanggan, tr_penjualan.tanggal_transaksi,
COUNT(tr_penjualan_detail.kode_produk) AS jumlah_detail
FROM tr_penjualan JOIN ms_pelanggan 
ON tr_penjualan.kode_pelanggan = ms_pelanggan.kode_pelanggan 
JOIN tr_penjualan_detail
ON tr_penjualan.kode_transaksi = tr_penjualan_detail.kode_transaksi 
GROUP BY tr_penjualan.kode_transaksi,tr_penjualan.kode_pelanggan, ms_pelanggan.nama_pelanggan, tr_penjualan.tanggal_transaksi
HAVING COUNT(tr_penjualan_detail.kode_produk) > 1;


