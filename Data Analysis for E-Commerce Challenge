# 10 Transaksi Terbesar User 12476 ðŸš€
select seller_id, buyer_id, total as nilai_transaksi, created_at as tanggal_transaksi
from orders
where buyer_id = 12476
order by 3 desc
limit 10;


# Transaksi per bulan ðŸš€
select EXTRACT(YEAR_MONTH FROM created_at) as tahun_bulan, 
count(1) as jumlah_transaksi, 
sum(total) as total_nilai_transaksi
from orders
where created_at>='2020-01-01'
group by 1
order by 1;


# Pengguna dengan Rata-rata Transaksi Terbesar di Januari 2020 ðŸš€
select buyer_id, count(1) as jumlah_transaksi, avg(total) as avg_nilai_transaksi
from orders
where created_at>='2020-01-01' and created_at<'2020-02-01'
group by 1
having count(1)>= 2 
order by 3 desc
limit 10;


# Transaksi Besar di Desember 2019 ðŸš€
select nama_user as nama_pembeli, total as nilai_transaksi, created_at as tanggal_transaksi
from orders
inner join users on buyer_id = user_id
where created_at>='2019-12-01' and created_at<'2020-01-01'
and total >= 20000000
order by 1;


# Kategori Produk Terlaris di 2020 ðŸš€
select category, sum(quantity) as total_quantity, sum(price) as total_price
from orders
inner join order_details using(order_id)
inner join products using(product_id)
where created_at>='2020-01-01'
and delivery_at IS NOT NULL
group by 1
order by 2 desc
limit 5;


# Mencari Pembeli High Value ðŸš€
SELECT 
	nama_user as nama_pembeli,
	count(1) as jumlah_transaksi,
	sum(total) as total_nilai_transaksi,
	min(total) as min_nilai_transaksi
FROM
	orders INNER JOIN users ON 
buyer_id = user_id
GROUP BY user_id, nama_user 
HAVING count(1) > 5 and min(total) > 2000000
ORDER BY 3 DESC;


# Mencari Dropshipper
SELECT
	nama_user as nama_pembeli,
	count(1) as jumlah_transaksi,
	count(distinct orders.kodepos) as distinct_kodepos,
	SUM(total) as total_nilai_transaksi,
	avg(total) as avg_nilai_transaksi
FROM
	orders INNER JOIN users ON 
buyer_id = user_id
GROUP BY user_id, nama_user
HAVING count(1) >= 10 and 
count(1)=count(distinct orders.kodepos)
ORDER BY 2 DESC;


# Mencari Reseller Offline ðŸš€
SELECT 
	nama_user as nama_pembeli,
	count(1) as jumlah_transaksi,
	SUM(total) as total_nilai_transaksi,
	avg(total) as avg_nilai_transaksi,
	avg(total_quantity) as avg_quantity_per_transaksi
FROM
	orders INNER JOIN users ON
buyer_id = user_id INNER JOIN
(SELECT order_id, SUM(quantity) as 
total_quantity from order_details 
group by 1) as summary_order
using(order_id)
WHERE orders.kodepos=users.kodepos
GROUP BY user_id, nama_user
HAVING count(1) >= 8 AND 
avg(total_quantity) > 10
ORDER BY 3 DESC;


# Pembeli Sekaligus  ðŸš€
SELECT
	nama_user as nama_pengguna,
	jumlah_transaksi_beli,
	jumlah_transaksi_jual
FROM 
  users INNER JOIN (SELECT 
buyer_id,
  count(1) as jumlah_transaksi_beli 
  FROM 
  orders group by 1) as buyer
  ON buyer_id = user_id
INNER JOIN (
  SELECT seller_id,
  count(1) as jumlah_transaksi_jual
  FROM
  orders group by 1) as seller
  ON seller_id = user_id
WHERE jumlah_transaksi_beli >= 7 
ORDER BY 1;


# Lama Transaksi dibayar ðŸš€
SELECT 
	EXTRACT(YEAR_MONTH FROM created_at) AS tahun_bulan,
	COUNT(1) AS jumlah_transaksi,
	AVG(DATEDIFF(paid_at, created_at)) AS avg_lama_dibayar,
	MIN(DATEDIFF(paid_at, created_at)) min_lama_dibayar,
	MAX(DATEDIFF(paid_at, created_at)) max_lama_dibayar
FROM orders
WHERE paid_at IS NOT NULL
GROUP BY 1
ORDER BY 1;


